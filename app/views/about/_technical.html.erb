

<h2>Technical Information</h2>

<h3>Data</h3>


<ul>
	<li>Documents follow the <a href="http://www.tei-c.org/Guidelines/P5/">Text Encoding Initiative P5 standard</a>.</li>
	<li>Relationships follow the <a href="http://www.w3.org/RDF/">RDF standard</a>, using our own schema.</li>
</ul>


<h3>Technologies</h3>

<ul>
	
	<li>Framework: <a href="http://rubyonrails.org/">Ruby on Rails 4</a></li>
	<li>Search and Browse functionality: <a href="http://lucene.apache.org/solr/">Apache Solr</a></li>
	<li>RDF Querying: <a href="http://jena.apache.org/download/#jena-fuseki">Apache Jena Fuseki</a></li>
	<li>Data Querying and Transformation: XSLT Scripts (powered by <a href="http://saxon.sourceforge.net/#F9.6HE">Saxon 9 HE</a>)</li>
	<li>Data Indexing: Ruby Scripts</li>
	<li>Visualizations: <a href="http://philogb.github.io/jit/">InfoVis Toolkit</a></li>
	
</ul>

<h3>Process</h3>

<h4>Data Creation</h4>

<p>First, photographs were taken of all documents. Since these photos did not serve an archival purpose, these were not taken according to any specifications.</p>

<p>Each document was encoded from the photographs, including in depth encoding of people, places, outcomes, relations, and more.</p>

<p>Separately, a CSV file was created that marks the relationships which can be inferred from documents. This process is not automated because of the complexity of relationships and the way they are recorded.</p>

<p>To index the data into Solr, a script goes through each TEI file and creates a static HTML view. A separate script creates XML suitable for ingest into Solr, and a Ruby script posts these to the Solr database. Much of the linking between documents happens during this process. For instance, a case document marks the related case, so we add the people mentioned in the case document to the case file.</p>

<p>In order to create the RDF for querying, a script is run on the CSV which specifies the relationships and pulls data from a TEI personography <!-- TODO I would like to link to a personography definition, but can't find a suitible one -KMD --> to create a triple file. Separately, the metadata specialist creates an RDF file to describe and constrain the data in the triple file.  </p>

<h4>Website Creation</h4>

<p>The first version of the <em>OSCYS</em> website was written in Apache Cocoon. The current version of the site is written in Ruby on Rails.</p>

<p>After data is created, it is indexed into Solr, and the Rails website calls on Solr for most data operations, such as listings for the browse pages, pulling metadata for the document pages, and pulling most of the information for case pages. </p>

<p>To populate relationships on people pages and the visualizations, a call is made to Apache Jena Fuseki, which returns JSON which is then reformatted as needed to work with <a href="http://philogb.github.io/jit/">InfoVis Toolkit</a>.</p>

<p>HTML views of the TEI files are preprocessed, and served as needed from a file system.</p>





	